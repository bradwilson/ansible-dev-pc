- name: kubernetes
  hosts: 127.0.0.1
  connection: local

  vars:
    is_mac: "{{ ansible_distribution == 'MacOSX' }}"

  tasks:
    # Linux

    - name: Add Kubernetes APT package key
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      when: not is_mac

    - name: Add Kubernetes APT package repository
      become: yes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        filename: kubernetes
        update_cache: no
      register: apt_repository
      when: not is_mac

    - name: Update APT package list
      become: yes
      apt:
        update_cache: yes
      when: apt_repository.changed
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: Install kubectl (Linux)
      become: yes
      apt:
        package: kubectl
      when: not is_mac

    - name: Determine k9s latest version
      shell:
        cmd: "curl -s https://api.github.com/repos/derailed/k9s/releases/latest | jq -r .name"
        warn: false
      register: k9s_version
      when: not is_mac

    - name: Create k9s output folder
      become: yes
      file:
        path: /opt/derailed/k9s/{{ k9s_version.stdout }}
        state: directory
        mode: 0755
      when: not is_mac

    - name: Install k9s (Linux)
      become: yes
      unarchive:
        remote_src: yes
        src: https://github.com/derailed/k9s/releases/download/{{ k9s_version.stdout }}/k9s_Linux_x86_64.tar.gz
        dest: /opt/derailed/k9s/{{ k9s_version.stdout }}
        creates: /opt/derailed/k9s/{{ k9s_version.stdout }}/k9s
      when: not is_mac

    - name: Symlink k9s
      become: yes
      file:
        path: /usr/local/bin/k9s
        src: /opt/derailed/k9s/{{ k9s_version.stdout }}/k9s
        state: link
      when: not is_mac

    - name: Determine Kubeval latest version
      shell:
        cmd: "curl -s https://api.github.com/repos/instrumenta/kubeval/releases/latest | jq -r .name"
        warn: false
      register: kubeval_version
      when: not is_mac

    - name: Create Kubeval output folder
      become: yes
      file:
        path: /opt/instrumenta/kubeval/{{ kubeval_version.stdout }}
        state: directory
        mode: 0755
      when: not is_mac

    - name: Install Kubeval (Linux)
      become: yes
      unarchive:
        remote_src: yes
        src: "https://github.com/instrumenta/kubeval/releases/download/{{ kubeval_version.stdout }}/kubeval-linux-amd64.tar.gz"
        dest: /opt/instrumenta/kubeval/{{ kubeval_version.stdout }}
        creates: /opt/instrumenta/kubeval/{{ kubeval_version.stdout }}/kubeval
      when: not is_mac

    - name: Symlink kubeval
      become: yes
      file:
        path: /usr/local/bin/kubeval
        src: /opt/instrumenta/kubeval/{{ kubeval_version.stdout }}/kubeval
        state: link
      when: not is_mac

    # macOS

    - name: Install bash completion support
      homebrew:
        name: bash-completion
      register: bash_completion
      when: is_mac

    - name: Add bash completion support to shell
      lineinfile:
        path: ~/.bashrc
        line: source $(brew --prefix)/etc/bash_completion
      when: bash_completion.changed

    - name: Install kubectl (macOS)
      homebrew:
        name: kubectl
      when: is_mac

    - name: Install k9s (macOS)
      homebrew:
        name: k9s
      when: is_mac

    - name: Add Kubeval homebrew tap
      homebrew_tap:
        name: instrumenta/instrumenta
      when: is_mac

    - name: Install Kubeval (macOS)
      homebrew:
        name: kubeval
      when: is_mac

    # Common

    - name: Enable bash completion for kubectl
      blockinfile:
        path: ~/.bashrc
        marker: "### {mark} Ansible managed: Enable kubectl auto-complete"
        block: |
          if which kubectl > /dev/null; then
            eval "$(kubectl completion bash)"
          fi
